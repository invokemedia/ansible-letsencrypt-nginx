---
- name: add package repositories
  apt_repository: repo={{ item }}
  with_items:
    - "ppa:certbot/certbot"

- name: update package lists
  apt: update_cache=yes cache_valid_time=3600

- name: install letsencrypt required packages
  apt: name={{ item }} state=present
  with_items:
    - "certbot"

- name: Add SSL test block
  blockinfile:
    dest: "/etc/nginx/sites-enabled/default"
    block: |
          location ~ /.well-known {
            allow all;
          }
    state: "present"
    marker: ""
    insertbefore: "}$"

- name: use letsencrypt webroot plugin
  command: certbot certonly -a webroot --webroot-path={{ letsencrypt_root }} -d {{ letsencrypt_domain }} --non-interactive --agree-tos --email {{ letsencrypt_email }} creates="/etc/letsencrypt/live/{{ letsencrypt_domain }}/fullchain.pem"

- name: Delete lines in nginx to replace with new SSL block
  lineinfile: dest="/etc/nginx/sites-enabled/default" state=absent regexp={{ item }}
  with_items:
    - (listen).*
    - (server_name).*

- name: Add SSL server block
  blockinfile:
    dest: "/etc/nginx/sites-enabled/default"
    block: |
      # redirect all traffic to https://
      listen 80;
      listen [::]:80 default ipv6only=on; ## listen for ipv6
      server_name {{ letsencrypt_domain }};
      return 301 https://{{ letsencrypt_domain }}$request_uri;
      }
      server {
      listen 443 ssl;
      server_name {{ letsencrypt_domain }};
      ssl_certificate /etc/letsencrypt/live/{{ letsencrypt_domain }}/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/{{ letsencrypt_domain }}/privkey.pem;
    state: "present"
    marker: ""
    insertafter: ^server\s?\{

- name: restart nginx
  service: name=nginx state=restarted

- name: create CRON task for auto-renew
  cron: name="certbot-daily-renew" minute=30 hour=3 job="/usr/bin/certbot renew --quiet --renew-hook \"/bin/systemctl reload nginx\"" state=present
